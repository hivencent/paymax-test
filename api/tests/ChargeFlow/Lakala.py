# -*- coding: utf-8 -*-
__author__ = 'jinlong'
import unittest
from api.model.Charge import *
from api.util import HttpUtil
from api.util import PaymaxUtil
import json
import datetime
import requests


'''
此文件是测试【lakala_web,lakala_h5,lakala_app,lakala_web_fast】的支付流程
'''

class LAKALA_WEB(unittest.TestCase):

    def setUp(self):
        self.body = HttpUtil.setBody()              #初始化body
        self.body['channel'] = 'lakala_web'
        self.body['extra'] = { "user_id":"123","return_url":"http://www.abc.cn/"}
        self.headers = HttpUtil.setHeader()         #初始化headers
        self.callback_url = 'http://172.30.21.22:8888/webservice/callback/lakala_web'

    def test_lakala_web(self):
        #下单
        PaymaxUtil.echo_title(u'LAKALA_WEB 支付流程')
        status_code,url,text = Charge.create(self.body,headers=self.headers)
        print u'地址:' + url + '\n', json.dumps(text,ensure_ascii=False)
        PaymaxUtil.TestAssertion().charge_assertion(text=text,body=self.body)

        print u"\n下单成功,订单号:%s" % text['id']

        print u'\n准备支付回调 订单号:%s' % text['id']
        #模拟支付回调
        param = {
            "returnCode":"000000",
            "status": "SUCCESS",
            "tradeNo": "201608150001983301",
            "signType": "RSA",
            "charset": "00",
            "orderTime": "%s" % PaymaxUtil.gen_now(str="%Y%m%d%H%M%S"),
            "serverSign": "94274728BD6B41D0EE7055E2B8A13F48EA2F79DCD7470E6FBBD575A6554725E4AF1950774BA91C7C90936BA9AC8890AA2B7F6F880297B0406C9D554FDFFAFA23EB5C1DAA85A01E4B76B941DD8BDAA3A3DABA7CA65DE4983137D291C37FBF4FA0FE8354B4B6BB3F2C5E2384AF438ADCE0527CF062F866A99981F38A010352D06D",
            "payTime": "20160831201027",
            "returnMessage": "SUCCESS",
            "bankAbbr": "CCB",
            "version": "1.0",
            "purchaserId": "153****1023",
            "acDate": "%s" % datetime.datetime.now().strftime("%Y%M%D"),
            "fee": "50",
            "serverCert": "308203653082024DA00302010202081BF6C2A9D997293C300D06092A864886F70D0101050500305B310B300906035504061302636E310B300906035504080C02626A3110300E06035504070C076265696A696E67310F300D060355040A0C064D75726F6E67310B3009060355040B0C024954310F300D06035504030C06726F6F744341301E170D3135303131393130303530365A170D3435303131393130303530365A305A310B300906035504061302636E310B300906035504080C02626A3110300E06035504070C076265696A696E67310F300D060355040A0C064D75726F6E67310B3009060355040B0C024954310E300C06035504030C05506179434130819F300D06092A864886F70D010101050003818D0030818902818100CEA9A82C9F5E6BF6AE9426EAF879CF0B8614B1C59818B841DBEE3BD44A09F03DEBD59871D975BFE42F19177342D00988A13912B153F0CC72C16EBD23C8596610F45978797414C5D211FB3DE1DA3944A8D75E7A0749EFE2E36DC46FCC42A373FFCD8F4B1C69E6D9789EEB51BF01AABE43E940652DE8F890004A965B07E49A614D0203010001A381B13081AE301D0603551D0E0416041439E6E108F96F61A1FBEA466C406666E545742BD530818C0603551D23048184308181801407C69254961EB26785D105D969445BF72CF3CCA7A15FA45D305B310B300906035504061302636E310B300906035504080C02626A3110300E06035504070C076265696A696E67310F300D060355040A0C064D75726F6E67310B3009060355040B0C024954310F300D06035504030C06726F6F74434182081BF6C2A9D76A7CF2300D06092A864886F70D010105050003820101003498678C1547E2D86CCBEE81971E54221EFBDFFF85F3BAA9BB5C6EC217E02DDD48641B132BB4AAF87BE91461304F7457554465F767D29E61266DC0212F8D1DAE06743B6D62125BE989DF80B889FCA6DC25D67F28581A8C44B400D754F3B0542F56603432131E690F8FC4D632717F914A199E080FABECCD4D931EF4288330B4E9CF684409E3CA2D026EDDD4DFC473C7ADEE759E15CD2937CA95DC2F347FAE4E67257CE9941E361EBAAEC1445CB01DBE74E3BDFF62E4FF6D378C0559E4D75AD42C10B78A1999280EA9A5C3FCE22808A722D3D9C9E8929CF02D0CDB7938E30478FBE21D5F53E7A1646F3510A6A4E062748453B23620273927D0F8A3A8622714DAEB",
            "service": "OFFLINERESULT",
            "totalAmount": "1000",
            "merchantId": "888031115200001",
            "backParam": "",
            "orderId": "%s" % text['id']
        }

        r = requests.post(url=self.callback_url,params = param)
        print '请求地址:' + r.url + '\nLAKALA_WEB支付返回结果:\n' + r.text
        self.assertEqual(r.text,"success")


    def tearDown(self):
        pass


class LAKALA_H5(unittest.TestCase):

    def setUp(self):
        self.body = HttpUtil.setBody()
        self.body['channel'] = 'lakala_h5'
        self.body['extra'] = {
            "user_id": "123",
            "return_url": "http://payright.cn",
            "show_url": "http://payright.cn"
        }

        self.headers = HttpUtil.setHeader()
        self.callback_url = 'http://172.30.21.22:8888/webservice/callback/lakala_h5'

    def test_lakala_h5(self):
        PaymaxUtil.echo_title(u'LAKALA_H5 支付流程')
        status_code, url, text = Charge.create(self.body, headers=self.headers)
        print u'地址:' + url + '\n', json.dumps(text, ensure_ascii=False)
        PaymaxUtil.TestAssertion().charge_assertion(text=text,body=self.body)

        print u"\n下单成功,订单号:%s" % text['id']

        print u'\n准备支付回调 订单号:%s' % text['id']
        # 模拟支付回调
        param = {
            "returnCode": "000000",
            "status": "SUCCESS",
            "tradeNo": "201608150001983301",
            "signType": "RSA",
            "charset": "00",
            "orderTime": "%s" % PaymaxUtil.gen_now(str="%Y%m%d%H%M%S"),
            "serverSign": "94274728BD6B41D0EE7055E2B8A13F48EA2F79DCD7470E6FBBD575A6554725E4AF1950774BA91C7C90936BA9AC8890AA2B7F6F880297B0406C9D554FDFFAFA23EB5C1DAA85A01E4B76B941DD8BDAA3A3DABA7CA65DE4983137D291C37FBF4FA0FE8354B4B6BB3F2C5E2384AF438ADCE0527CF062F866A99981F38A010352D06D",
            "payTime": "20160831201027",
            "returnMessage": "SUCCESS",
            "bankAbbr": "CCB",
            "version": "1.0",
            "purchaserId": "153****1023",
            "acDate": "%s" % datetime.datetime.now().strftime("%Y%M%D"),
            "fee": "50",
            "serverCert
            "service": "OFFLINERESULT",
            "totalAmount": "1000",
            "merchantId": "888031115200001",
            "backParam": "",
            "orderId": "%s" % text['id']
        }

        r = requests.post(url=self.callback_url, params=param)
        print '请求地址:' + r.url + '\nLAKALA_H5支付返回结果:\n' + r.text
        self.assertEqual(r.text,"success")


    def tearDown(self):
        pass

class LAKALA_APP(unittest.TestCase):

    def setUp(self):

        self.body = HttpUtil.setBody()
        self.body['channel'] = 'lakala_app'
        self.body['extra'] = {"user_id": "888888"}          #LAKALA_APP需要人脸识别,userid:888888 已经人脸识别。
        self.headers = HttpUtil.setHeader()
        self.callback_url = "http://172.30.21.22:8888/webservice/callback/lakala_app"

    def test_lakala_app(self):
        PaymaxUtil.echo_title(u'LAKALA_APP 支付流程')
        status_code, url, text = Charge.create(self.body, headers=self.headers)
        print u'地址:' + url + '\n', json.dumps(text, ensure_ascii=False)
        PaymaxUtil.TestAssertion().charge_assertion(text=text,body=self.body)

        print u"\n下单成功,订单号:%s" % text['id']

        print u'\n准备支付回调 订单号:%s' % text['id']
        # 模拟支付回调
        param = {
            "returnCode": "000000",
            "status": "SUCCESS",
            "tradeNo": "201608150001983301",
            "signType": "RSA",
            "charset": "00",
            "orderTime": "%s" % PaymaxUtil.gen_now(str="%Y%m%d%H%M%S"),
            "serverSign": "94274728BD6B41D0EE7055E2B8A13F48EA2F79DCD7470E6FBBD575A6554725E4AF1950774BA91C7C90936BA9AC8890AA2B7F6F880297B0406C9D554FDFFAFA23EB5C1DAA85A01E4B76B941DD8BDAA3A3DABA7CA65DE4983137D291C37FBF4FA0FE8354B4B6BB3F2C5E2384AF438ADCE0527CF062F866A99981F38A010352D06D",
            "payTime": "20160831201027",
            "returnMessage": "SUCCESS",
            "bankAbbr": "CCB",
            "version": "1.0",
            "purchaserId": "153****1023",
            "acDate": "%s" % datetime.datetime.now().strftime("%Y%M%D"),
            "fee": "50",
            "serverCert
            "service": "OFFLINERESULT",
            "totalAmount": "1000",
            "merchantId": "888031115200001",
            "backParam": "",
            "orderId": "%s" % text['id']
        }

        r = requests.post(url=self.callback_url, params=param)
        print '请求地址:' + r.url + '\nLAKALA_APP支付返回结果:\n' + r.text
        self.assertEqual(r.text,"success")

    def tearDown(self):
        pass

class LAKALA_WEB_FAST(unittest.TestCase):

    def setUp(self):

        self.body = HttpUtil.setBody()
        self.body['channel'] = 'lakala_web_fast'
        self.body['extra'] = {"user_id": "123"}          #LAKALA_APP需要人脸识别,userid:888888 已经人脸识别。
        self.headers = HttpUtil.setHeader()
        self.callback_url = "http://172.30.21.22:8888/webservice/callback/lakala_web_fast"

    def test_lakala_web_fast(self):
        PaymaxUtil.echo_title(u'LAKALA_WEB_FAST 支付流程')
        status_code, url, text = Charge.create(self.body, headers=self.headers)
        print u'地址:' + url + '\n', json.dumps(text, ensure_ascii=False)
        PaymaxUtil.TestAssertion().charge_assertion(text=text,body=self.body)

        print u"\n下单成功,订单号:%s" % text['id']

        print u'\n准备支付回调 订单号:%s' % text['id']
        # 模拟支付回调
        param = {
            "returnCode": "000000",
            "status": "SUCCESS",
            "tradeNo": "201608150001983301",
            "signType": "RSA",
            "charset": "00",
            "orderTime": "%s" % PaymaxUtil.gen_now(str="%Y%m%d%H%M%S"),
            "serverSign": "94274728BD6B41D0EE7055E2B8A13F48EA2F79DCD7470E6FBBD575A6554725E4AF1950774BA91C7C90936BA9AC8890AA2B7F6F880297B0406C9D554FDFFAFA23EB5C1DAA85A01E4B76B941DD8BDAA3A3DABA7CA65DE4983137D291C37FBF4FA0FE8354B4B6BB3F2C5E2384AF438ADCE0527CF062F866A99981F38A010352D06D",
            "payTime": "20160831201027",
            "returnMessage": "SUCCESS",
            "bankAbbr": "CCB",
            "version": "1.0",
            "purchaserId": "153****1023",
            "acDate": "%s" % datetime.datetime.now().strftime("%Y%M%D"),
            "fee": "50",
            "serverCert
            "service": "OFFLINERESULT",
            "totalAmount": "1000",
            "merchantId": "888031115200001",
            "backParam": "",
            "orderId": "%s" % text['id']
        }

        r = requests.post(url=self.callback_url, params=param)
        print '请求地址:' + r.url + '\nLAKALA_WEB_FAST支付返回结果:\n' + r.text
        self.assertEqual(r.text,"success")


    def tearDown(self):
        pass


if __name__ == '__main__':
    unittest.main()