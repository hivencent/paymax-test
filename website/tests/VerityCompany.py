# -*- coding: utf-8 -*-__author__ = 'jinlong'import sysreload(sys)sys.setdefaultencoding("utf-8")sys.path.append("../../")import osimport unittestimport timefrom website.util.utility import *from website.util.web_util import *from api.util import PaymaxUtilimport settingsfrom selenium import webdriverfrom selenium.common.exceptions import NoAlertPresentExceptionfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.common.keys import Keys     #键盘操作class VERITY_COMPANY(unittest.TestCase):    @classmethod    def setUpClass(self):        self.driver = webdriver.PhantomJS(executable_path="%s/phantomjs-2.1.1/bin/phantomjs" % WebConfig.PHANTOMJS)        # self.driver = webdriver.Firefox()        self.driver.implicitly_wait(30)        self.verificationErrors = []        self.accept_next_alert = True        self.url = WebConfig.HOST.FRONTEND_TEST_HOST        #生成随机手机号        self.phone = UTILITY.random_phone()        self.appname = UTILITY.gen_appname("WEB")        self.companyName = u"金龙测试公司_%s" % random.randint(10000, 99999)        self.companyRegAddress = u"WEB自动化公司测试地址"        self.streetAddress = u"WEB自动化测试详细地址"        self.VerityCompanyUpload = WebConfig.ABSPATH + "VerityCompanyUpload.jpg"        self.chargePerson = u"金龙"        self.qq = "277954117"        self.screenshots_url = "/tmp/Screenshots/"    # @unittest.skip(reason=u"调试")    def test_verity_company(self):        driver = self.driver        driver.set_window_size(1366,768)                 #设置浏览器大小        #Paymax注册        PaymaxUtil.echo_title(u'Paymax注册')        print u'生成的随机手机号:',self.phone        FrontEndWebUtil().register(driver=driver,phone=self.phone)        #登录        FrontEndWebUtil().web_login(driver=driver,username=self.phone,password=WebConfig.REGISTER_PW)        search_value = driver.find_element_by_xpath("//input[@type='text']").get_attribute('placeholder')        self.assertEqual(u"搜索商户订单号/订单ID",search_value)                                        #断言登录成功后,搜索框        print u'登录的账号 %s 密码 %s :' % (self.phone,WebConfig.REGISTER_PW)        #创建应用        PaymaxUtil.echo_title(u"登录成功-创建应用")        FrontEndWebUtil().create_app(driver=driver,appname=self.appname)        driver.refresh()        FrontEndWebUtil().find_app(driver=driver,appname=self.appname)              #找到创建的应用，点进去        #进入应用概况,判断是否有"知道了",如果有，点击        driver.find_element(By.LINK_TEXT,u"应用概况").click()        if FrontEndWebUtil().is_element_present(driver=driver,how=By.XPATH,what="html/body/div/div[2]/div/div[1]/ul/li/div[2]/button") == True:            print u"点击'知道了。。。'"            driver.find_element(By.XPATH,"html/body/div/div[2]/div/div[1]/ul/li/div[2]/button").click()        #点击"验证公司信息"        PaymaxUtil.echo_title(u"验证公司信息")        Wait.wait_until_clickable(driver=driver,by=By.XPATH,values="html/body/div/div[2]/div/div[1]/ul/li[1]/div[2]/div/button")        driver.find_element_by_xpath("html/body/div/div[2]/div/div[1]/ul/li[1]/div[2]/div/button").click()   #点击验证公司信息button        time.sleep(0.8)        driver.find_element(By.NAME,"companyName").send_keys(self.companyName)        time.sleep(0.3)        driver.find_element(By.NAME, "companyRegAddress").clear()        driver.find_element(By.NAME,"companyRegAddress").send_keys(self.companyRegAddress)        time.sleep(0.5)        print u"公司名字：",driver.find_element(By.NAME,"companyName").get_attribute("value")        print u"公司注册地址：",driver.find_element(By.NAME,"companyRegAddress").get_attribute("value")        #选择公司办公地址,思路:用tagname筛选想要的标签，然后click        #问题：点击选择城市后，获取城市的li标签，获取不到动态的城市内容，后期尝试解决。        ##选择省份        driver.find_element_by_css_selector("span.ng-binding.ng-scope").click()     #点击"选择省份"        province = driver.find_element(By.XPATH,"html/body/div/div[2]/div/div/form/div/div[1]/div[1]/div[2]/div[3]/div[2]/div[1]/dropdown[1]/div/ul/li[3]")        time.sleep(1)        # elements = driver.find_elements(By.TAG_NAME,'li')[0:7]                  #选择下拉列表前7个省        # province = random.choice(elements)                                      #随机选择一个省份        print u'选择的省份：',province.text        province.click()        ##选择城市        Wait.wait_until_clickable(driver=driver,by=By.CSS_SELECTOR,values="dropdown[name=\"cityList\"] > div.selectWrap > div.selectBtn")        driver.find_element_by_css_selector("dropdown[name=\"cityList\"] > div.selectWrap > div.selectBtn").click()         #点击"选择城市"        time.sleep(0.5)        Wait.wait_until_clickable(driver=driver,by=By.XPATH,values="html/body/div/div[2]/div/div/form/div/div[1]/div[1]/div[2]/div[3]/div[2]/div[1]/dropdown[2]/div/ul/li[1]")        city_element = driver.find_element_by_xpath("html/body/div/div[2]/div/div/form/div/div[1]/div[1]/div[2]/div[3]/div[2]/div[1]/dropdown[2]/div/ul/li[1]") #选择第一个城市        city_element.click()        print u'选择的城市：',city_element.text        ##选择区县        Wait.wait_until_clickable(driver=driver,by=By.CSS_SELECTOR,values="dropdown[name=\"regionList\"] > div.selectWrap > div.selectBtn > span.ng-binding.ng-scope")        driver.find_element_by_css_selector("dropdown[name=\"regionList\"] > div.selectWrap > div.selectBtn > span.ng-binding.ng-scope").click()                #点击"选择区县"        time.sleep(0.5)        Wait.wait_until_clickable(driver=driver,by=By.XPATH,values="html/body/div/div[2]/div/div/form/div/div[1]/div[1]/div[2]/div[3]/div[2]/div[1]/dropdown[3]/div/ul/li[1]")        county_element = driver.find_element_by_xpath("html/body/div/div[2]/div/div/form/div/div[1]/div[1]/div[2]/div[3]/div[2]/div[1]/dropdown[3]/div/ul/li[1]")       #选择第一个区县        county_element.click()        print u'选择的区县：',county_element.text        ##输入详细地址        driver.find_element(By.NAME, "streetAddress").clear()        driver.find_element(By.NAME,"streetAddress").send_keys(self.streetAddress)        print u"公司详细地址：",self.streetAddress        #上传公司营业执照        FrontEndWebUtil().upload(driver=driver,by=By.NAME,value="licenseFile",up_file=self.VerityCompanyUpload)        #上传组织机构代码        FrontEndWebUtil().upload(driver=driver,by=By.NAME,value="orgCertFile",up_file=self.VerityCompanyUpload)        #上传税务登记证        FrontEndWebUtil().upload(driver=driver,by=By.NAME,value="taxRegFile",up_file=self.VerityCompanyUpload)        #填写支付负责人        time.sleep(0.5)        driver.find_element(By.NAME, "realName").clear()        driver.find_element(By.NAME,"realName").send_keys(self.chargePerson)        time.sleep(0.5)        driver.find_element(By.NAME, "qq").clear()        driver.find_element(By.NAME,"qq").send_keys(self.qq)        print u"\n姓名：%s\nQQ：%s" % (driver.find_element(By.NAME,"realName").get_attribute("value"),driver.find_element(By.NAME,"qq").get_attribute("value"))        #点击下一步        #调试：先截图        # picname = u'下一步测试截图' + '.png'        # screenshots_url = "/tmp/Screenshots/"        # FrontEndWebUtil().screenshots(driver=driver,screenshots_url=screenshots_url,picname=picname)        time.sleep(0.5)        Wait.wait_until_clickable(driver=driver,by=By.CSS_SELECTOR,values="div.text-center.btn-group > input.btn.btnDashboard")        nest = driver.find_element_by_css_selector("div.text-center.btn-group > input.btn.btnDashboard")        nest.click()        print u'点击下一步：%s' % nest.get_attribute("value")        PaymaxUtil.echo_title(u"支付服务协议")        Wait.wait_until_clickable(driver=driver,by=By.XPATH,values="//button[@ng-click='apply()']")        apply_ele = driver.find_element(By.XPATH,"//button[@ng-click='apply()']")        apply_ele.click()               #点击同意并继续        print u"点击：", apply_ele.text        #断言提交审核后，应用概况信息（button变为"查看企业信息"）        PaymaxUtil.echo_title(u"验证企业信息")        Wait.wait_until_visibility(driver=driver,by=By.XPATH,values="html/body/div/div[2]/div/div[1]/ul/li[1]/div[2]/div/button")        print u"提交审核后button状态：%s" % driver.find_element(By.XPATH,"html/body/div/div[2]/div/div[1]/ul/li[1]/div[2]/div/button").text        self.assertEqual(driver.find_element(By.XPATH,"html/body/div/div[2]/div/div[1]/ul/li[1]/div[2]/div/button").text,u"查看企业信息")        driver.find_element_by_xpath("html/body/div/div[2]/div/div[1]/ul/li[1]/div[2]/div/button").click()   # 点击"查看企业信息"button        print u"点击查看企业信息"        time.sleep(0.5)        Wait.wait_until_visibility(driver=driver,by=By.NAME,values="companyName")        print u"提交企业信息的名字：%s" % driver.find_element(By.NAME,"companyName").get_attribute("value")        time.sleep(0.5)        # self.assertEqual(driver.find_element(By.NAME,"companyName").get_attribute("value"),self.companyName)              #经常导致断言失败，shit        #退出登录        PaymaxUtil.echo_title(u"退出登录")        driver.back()        FrontEndWebUtil().web_logout(driver=driver)                    #调用退出方法        WebDriverWait(driver,10).until(EC.title_contains(u"用户登录"))        self.assertIn(u"用户登录",driver.title)                         #断言登录页title        print u"退出页title：",driver.title    # def test_backend_verity_company(self):    #     print self.companyName    #     driver = self.driver    #     driver.maximize_window()        #后台登录        PaymaxUtil.echo_title(u"后台登录")        BackendUtil().bankend_login(driver=driver,username="lisi",password="000000")        #进入"线上门店审批"        PaymaxUtil.echo_title(u"进入菜单模块")        BackendUtil().level_1_menu(driver=driver,menuname=u"线上商户审批")        #选择二级菜单        BackendUtil().level_2_menu_v2(driver=driver,menuname=u"线上商户列表")        #判断点击二级菜单是否报错        result = BackendUtil().alter_error(driver=driver)        if result is not None:            self.fail(result)        #搜索框输入        PaymaxUtil.echo_title(u"搜索")        BackendUtil().search_input(driver=driver,searchField=u"公司名称",searchSendKeys=self.companyName)        BackendUtil().search_input(driver=driver,searchField=u"手机号码",searchSendKeys=self.phone)        #搜索下拉列表        # BackendUtil().search_select(driver=driver,searchField=u"状态",searchSelect=u"已通过")        #点击查询        driver.find_element(By.XPATH,"//button[@type='submit']").click()        print u"\n点击查询"        time.sleep(0.8)        #判断只查询到一个结果        search_element = driver.find_elements(By.XPATH,"//tr[@align='center' and @onclick='']")          #预期只能查到一个唯一的        resultCount = len(search_element)        # self.assertEqual(resultCount,1,u"返回结果%s个，不是1个" % resultCount)        print u'返回%s结果，点击操作，进入公司详情' % resultCount        driver.find_element(By.LINK_TEXT,u"操作").click()        #断言公司基本信息        PaymaxUtil.echo_title(u"断言公司基本信息")        companyName = driver.find_element(By.XPATH,".//*[@id='navTab']/div[2]/div[3]/div/div/div[1]/div[2]/table/tbody/tr[1]/td[2]/span").text        companyRegAddress = driver.find_element(By.XPATH,".//*[@id='navTab']/div[2]/div[3]/div/div/div[1]/div[2]/table/tbody/tr[1]/td[4]/span").text        chargePreson = driver.find_element(By.XPATH,".//*[@id='navTab']/div[2]/div[3]/div/div/div[1]/div[2]/table/tbody/tr[2]/td[4]/span").text        phone = driver.find_element(By.XPATH,".//*[@id='navTab']/div[2]/div[3]/div/div/div[1]/div[2]/table/tbody/tr[3]/td[2]/span").text        qq = driver.find_element(By.XPATH,".//*[@id='navTab']/div[2]/div[3]/div/div/div[1]/div[2]/table/tbody/tr[4]/td[2]/span").text        self.assertEqual(self.companyName,companyName,u"检查公司名字不一致：%s %s" % (self.companyName,companyName))        self.assertEqual(self.companyRegAddress,companyRegAddress,u"检查公司地址不一致：%s %s" % (self.companyRegAddress,companyRegAddress))        self.assertEqual(self.chargePerson,chargePreson,u"检查支付联系人不一致：%s %s" % (self.chargePerson,chargePreson))        self.assertEqual(self.phone,phone,u"检查手机号不一致：%s %s" % (self.phone,phone))        self.assertEqual(self.qq,qq,u"检查qq不一致：%s %s" % (self.qq,qq))        print u"断言公司基本信息通过..."        #输入台账记录        driver.find_element(By.NAME,"auditMessage").send_keys(u"自动化测试审核意见")        driver.find_element(By.NAME,"auditRecord").send_keys(u"自动化测试台账记录")        #点击通过        driver.find_element(By.ID,"audit-success").click()        #关闭弹出框        time.sleep(0.8)        print u"点击 %s" %  driver.find_element(By.XPATH,"//a[@class='button'][@onclick='alertMsg.close()']").text        driver.find_element(By.XPATH,"//a[@class='button'][@onclick='alertMsg.close()']").click()        print u"\n输入审核意见\n输入台账记录\n点击通过按钮"        #进入二级列表页查看公司信息        time.sleep(0.3)        BackendUtil().level_2_menu_v2(driver=driver,menuname=u"线上商户列表")        BackendUtil().search_input(driver=driver,searchField=u"公司名称",searchSendKeys=self.companyName)        BackendUtil().search_input(driver=driver,searchField=u"手机号码",searchSendKeys=self.phone)        #点击查询        driver.find_element(By.XPATH,"//button[@type='submit']").click()        time.sleep(0.5)        auditResult = driver.find_element(By.XPATH,".//*[@id='w_list_print']/div/table/tbody/tr/td[7]")        print u'审核结果：',auditResult.text        self.assertEqual(auditResult.text,u"已通过")        print u"\n审核后公司信息"        print driver.find_element(By.XPATH,".//*[@id='w_list_print']/div/table/thead/tr").text        Wait.wait_until_visibility(driver=driver,by=By.XPATH,values=".//*[@id='w_list_print']/div/table/tbody/tr")        print driver.find_element(By.XPATH,".//*[@id='w_list_print']/div/table/tbody/tr").text    def tearDown(self):        '''        #删除应用        PaymaxUtil.echo_title(u'删除应用')        driver = self.driver        FrontEndWebUtil().delete_app(driver=driver,appname=self.appname,password=REGISTER_PW)        '''        self.driver.quit()        self.assertEqual([], self.verificationErrors)    def is_alert_present(self):        try: self.driver.switch_to_alert()        except NoAlertPresentException, e: return False        return True    def is_element_present(self, how, what):        self.driver.implicitly_wait(3)        try:            self.driver.find_element(by=how, value=what)        except NoSuchElementException, e:            return False        return Trueif __name__ == "__main__":    unittest.main()